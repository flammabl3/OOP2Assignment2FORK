@page "/flights"
@using OOP2Assignment2.Services
@using Microsoft.Maui.Controls
@inject FlightHandler flightHandler
@inject ReservationHandler reservationHandler


<div class="header">
    <h1>Flight Finder</h1>
</div>



<div id ="flightSelect">
    <label>
        From
        <InputText @bind-Value="outgoing" />
    </label>

    <label>
        To
        <InputText @bind-Value="incoming" />
    </label>

    <label>
        Day
        <InputText @bind-Value="searchDay" />
    </label>

    <button class="btn btn-primary topbutton" @onclick="FindFlights">Find Flights</button>

</div>

<div class="header">
    <h1>Flights</h1>
</div>

<div>
    <select @bind=selectedFlightNumber>
        @foreach (Flight flight in flights)
        {
            <option value="@flight.FlightNumber">@flight</option>
        }
    </select>
</div>

<div class="header">
    <h1>Reserve</h1>
</div>

<div id="reservationMaker">
    <label>
        Flight Code
        <InputText @bind-Value="flightNo"/>
    </label>

    <label>
        Airline
        <InputText @bind-Value="airline"/>
    </label>

    <label>
        Day
        <InputText @bind-Value="day" />
    </label>

    <label>
        Time
        <InputText @bind-Value="time" />
    </label>

    <label>
        Cost
        <InputText @bind-Value="cost"/>
    </label>

    <label>
        Name
        <InputText @bind-Value="name"/>
    </label>

    <label>
        Citizenship
        <InputText @bind-Value="citizenship"/>
    </label>

    <button class="btn btn-primary" @onclick="SaveReservations">Reserve</button>
      @if (!string.IsNullOrEmpty(errorMessage))
      {
          <div class="alert alert-danger">@errorMessage</div>
      }
</div>


<p>Reservation Code: @reservationCode</p>




@code {
    private List<Flight> flights = new List<Flight>();
    private string incoming { get; set; } = string.Empty;
    private string outgoing { get; set; } = string.Empty;
    private string searchDay { get; set; } = string.Empty;

    private string code { get; set; } = string.Empty;
    private string name { get; set; } = string.Empty;
    private string airline { get; set; } = string.Empty;
    private string flightNo { get; set; } = string.Empty;
    private string day { get; set; } = string.Empty;
    private string cost { get; set; } = string.Empty;
    private string time { get; set; } = string.Empty;
    private string citizenship { get; set; } = string.Empty;

    private string? errorMessage;

    private string? _selectedNo;

    private string? reservationCode;

    string? selectedFlightNumber
    {
        get { return _selectedNo; }
        set
        {
            _selectedNo = value;
            selectedFlight = flightHandler.findFlights(_selectedNo);
            modifyItems();
        } 
    }

    Flight selectedFlight;
    Reservation selectedReservation;

    protected override void OnInitialized()
    {
        flightHandler.ReadCSV();
        incoming = "Any";
        outgoing = "Any";
        searchDay = "Any";
        selectedFlight = new Flight();
    }

    void FindFlights()
    {
        flights = flightHandler.findFlights(outgoing, incoming, searchDay);
        if (flights.Count() > 0)
        {
            selectedFlight = flights[0];
            modifyItems();
        }
    }

    void SaveReservations()
    {
        if (string.IsNullOrEmpty(selectedFlight.FlightNumber))
        {
            errorMessage = "A flight must be selected!";
            return;
        }

        if (string.IsNullOrEmpty(name))
        {
            errorMessage = "A name must be entered!";
            return;
        }

        if (string.IsNullOrEmpty(citizenship))
        {
            errorMessage = "A citizenship must be entered!";
            return;
        }

        //if no time is entered, just use the current time.
        if (string.IsNullOrEmpty(time))
        {
            time = DateTime.Now.ToString("HH:mm");
        }

        selectedReservation = new Reservation(flightNo, airline, day, time, float.Parse(cost), name, citizenship);
        reservationCode = selectedReservation.ReservationCode;
        reservationHandler.WriteToFile(selectedReservation);

        flightHandler.ReserveSeat(flightNo);

        resetError();
    }

    void resetError()
    {
        errorMessage = null;
    }


    void modifyItems()
    {
        flightNo = selectedFlight.FlightNumber;
        airline = selectedFlight.Airline;
        day = selectedFlight.Day;
        time = selectedFlight.Time;
        cost = selectedFlight.Cost.ToString();
    }
}